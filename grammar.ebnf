program = {<function>}

function = <name> '(' [<parameter-list>] ')' ':' <type-or-array> <statement>

return = 'return' <expression> ';'
statement = <return> | <block> | <declaration> | <expression> ';'

expression = <assignment> | <logical-or-exp>
logical-or-exp = <logical-and-exp> {'||' <logical-and-exp>}
logical-and-exp = <equality-exp> {'&&' <equality-ex>}
equality-exp = <relational-exp> {('==' | '!=') <relational-exp>}
relational-exp = <additive-exp> {('<' | '>' | '<=' | '>=') <additive-exp>}
additive-exp = <term> {('+' | '-') <term>}
term = <factor> {('*' | '/') <factor>}
factor = '(' <expression> ')' | <number> | ('-' | '~' | '!') <factor> | <name>

type-mod = 'const'
type = {<type-mod>} ('int' | 'char')
type-or-array = <type> | '[' <type> ']'

parameter-list = <name> ':' <type-or-array> {',' <variable>}

declaration = <name> ':' <type-or-array> ['=' <expression>] ';'
assignment = <name> '=' <expression>